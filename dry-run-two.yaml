---
# Source: benthos/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-benthos
  labels:
    helm.sh/chart: benthos-0.8.0
    app.kubernetes.io/name: benthos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "4.11.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: benthos/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-benthos-config
  namespace: observability-prisma
  labels:
    helm.sh/chart: benthos-0.8.0
    app.kubernetes.io/name: benthos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "4.11.0"
    app.kubernetes.io/managed-by: Helm
    
data:
  benthos.yaml: |
    http:
      enabled: true
      address: 0.0.0.0:4195
      root_path: /benthos
      debug_endpoints: false
    input:
      label: "no_config_in"
      generate:
        mapping: root = "This Benthos instance is unconfigured!"
        interval: 1m
    output:
      label: "no_config_out"
      stdout:
        codec: lines
---
# Source: benthos/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-benthos
  labels:
    helm.sh/chart: benthos-0.8.0
    app.kubernetes.io/name: benthos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "4.11.0"
    app.kubernetes.io/managed-by: Helm
    
spec:
  type: ClusterIP
  ports:
    -
      name: http
      port: 80
      protocol: TCP
      targetPort: http
  selector:
    app.kubernetes.io/name: benthos
    app.kubernetes.io/instance: release-name
---
# Source: benthos/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-benthos
  labels:
    helm.sh/chart: benthos-0.8.0
    app.kubernetes.io/name: benthos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "4.11.0"
    app.kubernetes.io/managed-by: Helm
    
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: benthos
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        checksum/config: f54ea403e7a00d0a3c5e42e0300086904ca22712e231631973dca1549d28cd93
      labels:
        app.kubernetes.io/name: benthos
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-benthos
      securityContext:
        {}
      terminationGracePeriodSeconds: 120
      containers:
        - name: benthos
          securityContext:
            {}
          image: "jeffail/benthos:4.11.0"
          imagePullPolicy: IfNotPresent
          ### For debugging only - enable to allow exec into container
          # command: ["/bin/sh","-c","sleep 300"]
          args:
            - "-c"
            - "/benthos.yaml"  
          ports:
            - name: http
              containerPort: 4195
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ping
              port: http
          readinessProbe:
            httpGet:
              path: /ready
              port: http
          env:
            []
          resources:
            {}
          volumeMounts:
            - name: config
              mountPath: "/benthos.yaml"
              subPath: "benthos.yaml"
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: release-name-benthos-config
---
# Source: benthos/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-benthos-test-connection"
  labels:
    helm.sh/chart: benthos-0.8.0
    app.kubernetes.io/name: benthos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "4.11.0"
    app.kubernetes.io/managed-by: Helm
    
  annotations:
    "helm.sh/hook": test
    "kube-linter.io/ignore-all": "Linter does not need to run on this test"
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-benthos:/ping']
  restartPolicy: Never
