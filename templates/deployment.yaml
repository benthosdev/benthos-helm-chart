apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "benthos.fullname" . }}
  labels:
    {{- include "benthos.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.workloadResourceAnnotations | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "benthos.selectorLabels" . | nindent 6 }}
  {{- with .Values.updateStrategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "benthos.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
            {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "benthos.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.command }}
          command:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if .Values.args }}
          args:
            {{- toYaml .Values.args | nindent 12 }}
          {{- else }}
          ### For debugging only - enable to allow exec into container
          # command: ["/bin/sh","-c","sleep 300"]
          args:
            - "-c"
            - "/benthos.yaml"
            {{- if eq .Values.watch true}}
            - -w
            {{- end }}
            {{- if and .Values.streams.enabled .Values.streams.streamsConfigMap }}
            - "streams"
            {{- if eq .Values.streams.api.enable false }}
            - "--no-api"
            {{- end }}
            - /streams/*.yaml
            {{- end }}
          {{- end }}  
          ports:
            - name: http
              {{- if .Values.http.address}}
              containerPort: {{ (split ":" .Values.http.address)._1 }}
              {{- else }}
              containerPort: 4195
              {{- end }}
              protocol: TCP
          {{- if .Values.http.enabled }}
          livenessProbe:
            httpGet:
              path: /ping
              port: http
              {{- if .Values.http.tls.enabled }}
              scheme: HTTPS
              {{- end }}
          readinessProbe:
            httpGet:
              path: /ready
              port: http
              {{- if .Values.http.tls.enabled }}
              scheme: HTTPS
              {{- end }}
          {{- end }}
          env:
            {{- toYaml .Values.env | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: "/benthos.yaml"
              subPath: "benthos.yaml"
              readOnly: true
            {{- if and .Values.http.tls.enabled .Values.http.tls.secretName }}
            - name: tls
              mountPath: "/tls"
              readOnly: true
            {{- end }}
            {{- range .Values.extraVolumeMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              readOnly: {{ .readOnly }}
            {{- end }}
            {{- if and .Values.streams.enabled .Values.streams.streamsConfigMap }}
            - name: streams
              mountPath: "/streams"
              readOnly: true
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ template "benthos.fullname" . }}-config
        {{- if and .Values.http.tls.enabled .Values.http.tls.secretName }}
        - name: tls
          secret:
            secretName: {{ .Values.http.tls.secretName }}
        {{- end }}
        {{- if .Values.extraVolumes }}
          {{- toYaml .Values.extraVolumes | nindent 8 }}
        {{- end }}
        {{- if and .Values.streams.enabled .Values.streams.streamsConfigMap }}
        - name: streams
          configMap:
            name: {{ .Values.streams.streamsConfigMap }}
        {{- end }}
